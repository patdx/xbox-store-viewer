/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const AvailabilityData: typeof import('./app/components/availability')['AvailabilityData']
  const Badge: typeof import('./app/components/ui/badge')['Badge']
  const Button: typeof import('./app/components/ui/button')['Button']
  const Card: typeof import('./app/components/ui/card')['Card']
  const CardContent: typeof import('./app/components/ui/card')['CardContent']
  const CardDescription: typeof import('./app/components/ui/card')['CardDescription']
  const CardFooter: typeof import('./app/components/ui/card')['CardFooter']
  const CardHeader: typeof import('./app/components/ui/card')['CardHeader']
  const CardTitle: typeof import('./app/components/ui/card')['CardTitle']
  const LANGUAGES: typeof import('./app/shared/consts')['LANGUAGES']
  const Link: typeof import('@remix-run/react')['Link']
  const MARKETS: typeof import('./app/shared/consts')['MARKETS']
  const ProductSchemaUI: typeof import('./app/shared/components-product')['ProductSchemaUI']
  const ReadMore: typeof import('./app/components/read-more')['ReadMore']
  const RegionSelector: typeof import('./app/shared/components')['RegionSelector']
  const StyledLink: typeof import('./app/shared/components')['StyledLink']
  const badgeVariants: typeof import('./app/components/ui/badge')['badgeVariants']
  const buttonVariants: typeof import('./app/components/ui/button')['buttonVariants']
  const cn: typeof import('./app/lib/utils')['cn']
  const createRef: typeof import('react')['createRef']
  const defineLoader: typeof import('@remix-run/cloudflare')['unstable_defineLoader']
  const fetchProduct: typeof import('./app/shared/utils.server')['fetchProduct']
  const fetchProducts: typeof import('./app/shared/utils.server')['fetchProducts']
  const forwardRef: typeof import('react')['forwardRef']
  const json: typeof import('@remix-run/react')['json']
  const lazy: typeof import('react')['lazy']
  const memo: typeof import('react')['memo']
  const ofetch: typeof import('ofetch')['ofetch']
  const productJp: typeof import('./app/shared/example-data')['productJp']
  const productUs: typeof import('./app/shared/example-data')['productUs']
  const startTransition: typeof import('react')['startTransition']
  const useCallback: typeof import('react')['useCallback']
  const useContext: typeof import('react')['useContext']
  const useDebugValue: typeof import('react')['useDebugValue']
  const useDeferredValue: typeof import('react')['useDeferredValue']
  const useEffect: typeof import('react')['useEffect']
  const useId: typeof import('react')['useId']
  const useImperativeHandle: typeof import('react')['useImperativeHandle']
  const useInsertionEffect: typeof import('react')['useInsertionEffect']
  const useLayoutEffect: typeof import('react')['useLayoutEffect']
  const useLoaderData: typeof import('@remix-run/react')['useLoaderData']
  const useMemo: typeof import('react')['useMemo']
  const useNavigate: typeof import('@remix-run/react')['useNavigate']
  const useParams: typeof import('@remix-run/react')['useParams']
  const useReducer: typeof import('react')['useReducer']
  const useRef: typeof import('react')['useRef']
  const useRevalidator: typeof import('@remix-run/react')['useRevalidator']
  const useState: typeof import('react')['useState']
  const useSyncExternalStore: typeof import('react')['useSyncExternalStore']
  const useTransition: typeof import('react')['useTransition']
  const v: typeof import('valibot')
}
// for type re-export
declare global {
  // @ts-ignore
  export type { LoaderFunctionArgs, MetaFunction } from '@remix-run/cloudflare'
  import('@remix-run/cloudflare')
  // @ts-ignore
  export type { Infer as vInfer } from 'valibot'
  import('valibot')
}
